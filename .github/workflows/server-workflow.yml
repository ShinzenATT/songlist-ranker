# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Build server artifacts

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    paths:
      - server/**
      - shared/**
      - gradle/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  attestations: write
  packages: write

jobs:
  build-server:
    runs-on: ubuntu-latest
    name: Build server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: 'generate-and-submit'
      - name: Build server jar
        run: gradle :server:shadowJar --no-daemon
      - name: Upload jar
        uses: actions/upload-artifact@v4.6.0
        with:
          name: songranker-server-jar
          path: server/build/libs/server-1.0.0-all.jar


  build-server-image:
    runs-on: ubuntu-latest
    name: Build server docker image
    needs: build-server
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: songranker-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4
        name: Download server artifact
        with:
          name: songranker-server-jar
      - name: unzip artifact
        run: unzip songranker-server-jar.zip -d server/build/libs/
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/shinzenatt/songlist-server:latest
            ghcr.io/shinzenatt/songlist-server:${{github.sha}}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/shinzenatt/songlist-server
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
  
