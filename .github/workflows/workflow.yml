# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Build artifacts

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    paths:
      - composeApp/**
      - shared/**
      - iosApp/**
      - gradle/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  attestations: write
  packages: write

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: 'generate-and-submit'
      - name: Build with Gradle
        run: gradle :composeApp:assembleRelease --no-daemon

      - name: Upload debug APK
        uses: actions/upload-artifact@v4.6.0
        with:
          name: songranker-debug.apk
          path: composeApp/build/outputs/apk/debug/composeApp-debug.apk
      - name: Upload release APK
        uses: actions/upload-artifact@v4.6.0
        with:
          name: songranker-release-unsigned.apk
          path: composeApp/build/outputs/apk/release/composeApp-release-unsigned.apk

  build-ios:
    runs-on: macos-latest
    name: Build IOS
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: 'generate-and-submit'
      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Build IOS Arm64 Framework
        run: gradle composeApp:linkReleaseFrameworkIosArm64
      - name: Build the IOS IPA
        if: false
        working-directory: iosApp
        run: |
          xcodebuild -project iosApp.xcodeproj \
                     -sdk iphoneos \
                     -scheme iosApp \
                     -configuration Debug \
                     build
      - name: Upload binaries
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ios-bin
          path: ~/Library/Developer/Xcode/DerivedData
  


  
  # Build job
  build-web:
    runs-on: ubuntu-latest
    name: Build website
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: songranker-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: 'generate-and-submit'
      - name: Build website
        run: gradle composeApp:wasmJsBrowserDistribution --no-daemon
      - name: Upload webfiles
        uses: actions/upload-artifact@v4.6.0
        with:
          name: song-ranker-web
          path: composeApp/build/dist/wasmJs/productionExecutable

  build-web-image:
    runs-on: ubuntu-latest
    name: Build web docker image
    needs: build-web
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: songranker-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4
        name: Download web artifact
        with:
          name: song-ranker-web
          path: build/js/packages/composeApp/kotlin
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: web.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/shinzenatt/songlist-web:latest
            ghcr.io/shinzenatt/songlist-web:${{github.sha}}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/shinzenatt/songlist-web
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
  
